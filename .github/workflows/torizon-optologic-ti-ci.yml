name: Torizon TI Optologic CI

on:
  push:
    branches:
      - '*-ti-*'
  workflow_dispatch:

permissions:
  contents: read

# Builds are expensive, discard the older ones on this github branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-torizon:
    name: Build Toradex Torizon BSP
    runs-on: [self-hosted, cqfd, fast]
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        machine: [verdin-am62]
        display: [5inch-SCX0500132GGC06, 7inch-SCX0700117GGC03, 10inch-SCX1001511GGC49]
    env:
      TORIZON_CORE_BUILDER_VERSION: 3.13.0

    steps:
      - name: Checkout torizon-optologic
        uses: actions/checkout@v4
        with:
          # Cloning the submodules is super slow, but we don't cleanup the git repository, so they are kept on our self-hosted runner
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install Torizon-core builder
        run: |
          mkdir -p tcbdir
          cd tcbdir
          wget https://raw.githubusercontent.com/toradex/tcb-env-setup/master/tcb-env-setup.sh
          set +e -x
          source tcb-env-setup.sh -t ${TORIZON_CORE_BUILDER_VERSION}

      - name: Torizon build
        # This command corresponds to the torizoncore-builder alias without --it
        run: docker run --rm -v /deploy -v "$(pwd)":/workdir -v storage:/storage -v /var/run/docker.sock:/var/run/docker.sock --network=host $(tcb_dynamic_params) torizon/torizoncore-builder:3 build --force --file ${{ matrix.machine }}_optologic_panel-cap-touch-${{ matrix.display }}-lvds.yaml

      - name: Cleanup workspace
        if: always()
        # Use a privileged container to cleanup root-owned files from torizoncore-builder
        run: docker run --rm --privileged -v "$(pwd)":/work alpine:3 sh -c 'rm -rf /work/tcbdir /work/build'
